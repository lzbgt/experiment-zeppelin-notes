{
  "paragraphs": [
    {
      "text": "%sh\npip3 install future",
      "user": "admin",
      "dateUpdated": "Apr 12, 2018 2:00:02 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/sh"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1523512218475_1079052812",
      "id": "20180412-135018_708616006",
      "dateCreated": "Apr 12, 2018 1:50:18 PM",
      "dateStarted": "Apr 12, 2018 2:00:02 PM",
      "dateFinished": "Apr 12, 2018 2:00:07 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\n",
      "user": "admin",
      "dateUpdated": "Apr 12, 2018 3:07:40 PM",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1523516860071_-204066754",
      "id": "20180412-150740_1936821899",
      "dateCreated": "Apr 12, 2018 3:07:40 PM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%python\nfrom __future__ import print_function, division\nfrom future.utils import iteritems\nfrom builtins import range\n# Note: you may need to update your version of future\n# sudo pip install -U future\n\nimport os, sys\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import MultinomialNB\nfrom wordcloud import WordCloud\n\n\n# data from:\n# https://www.kaggle.com/uciml/sms-spam-collection-dataset\n# file contains some invalid chars\n# depending on which version of pandas you have\n# an error may be thrown\ndf \u003d pd.read_csv(\u0027spam.csv\u0027, encoding\u003d\u0027ISO-8859-1\u0027)\n\nsys.exit()\n\n# drop unnecessary columns\ndf \u003d df.drop([\"Unnamed: 2\", \"Unnamed: 3\", \"Unnamed: 4\"], axis\u003d1)\n\n# rename columns to something better\ndf.columns \u003d [\u0027labels\u0027, \u0027data\u0027]\n\n# create binary labels\ndf[\u0027b_labels\u0027] \u003d df[\u0027labels\u0027].map({\u0027ham\u0027: 0, \u0027spam\u0027: 1})\nY \u003d df[\u0027b_labels\u0027].as_matrix()\n\n# try multiple ways of calculating features\n# tfidf \u003d TfidfVectorizer(decode_error\u003d\u0027ignore\u0027)\n# X \u003d tfidf.fit_transform(df[\u0027data\u0027])\n\ncount_vectorizer \u003d CountVectorizer(decode_error\u003d\u0027ignore\u0027)\nX \u003d count_vectorizer.fit_transform(df[\u0027data\u0027])\n\n# split up the data\nXtrain, Xtest, Ytrain, Ytest \u003d train_test_split(X, Y, test_size\u003d0.33)\n\n# create the model, train it, print scores\nmodel \u003d MultinomialNB()\nmodel.fit(Xtrain, Ytrain)\nprint(\"train score:\", model.score(Xtrain, Ytrain))\nprint(\"test score:\", model.score(Xtest, Ytest))\n\n\n\n# visualize the data\ndef visualize(label):\n  words \u003d \u0027\u0027\n  for msg in df[df[\u0027labels\u0027] \u003d\u003d label][\u0027data\u0027]:\n    msg \u003d msg.lower()\n    words +\u003d msg + \u0027 \u0027\n  wordcloud \u003d WordCloud(width\u003d600, height\u003d400).generate(words)\n  plt.imshow(wordcloud)\n  plt.axis(\u0027off\u0027)\n  plt.show()\n\nvisualize(\u0027spam\u0027)\nvisualize(\u0027ham\u0027)\n\n\n# see what we\u0027re getting wrong\ndf[\u0027predictions\u0027] \u003d model.predict(X)\n\n# things that should be spam\nsneaky_spam \u003d df[(df[\u0027predictions\u0027] \u003d\u003d 0) \u0026 (df[\u0027b_labels\u0027] \u003d\u003d 1)][\u0027data\u0027]\nfor msg in sneaky_spam:\n  print(msg)\n\n# things that should not be spam\nnot_actually_spam \u003d df[(df[\u0027predictions\u0027] \u003d\u003d 1) \u0026 (df[\u0027b_labels\u0027] \u003d\u003d 0)][\u0027data\u0027]\nfor msg in not_actually_spam:\n  print(msg)",
      "user": "admin",
      "dateUpdated": "Apr 12, 2018 3:14:25 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-5833405683617380016.py\", line 271, in \u003cmodule\u003e\n    exec(code, _zcUserQueryNameSpace)\n  File \"\u003cstdin\u003e\", line 13, in \u003cmodule\u003e\nSystemExit\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-5833405683617380016.py\", line 283, in \u003cmodule\u003e\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-5833405683617380016.py\", line 271, in \u003cmodule\u003e\n    exec(code, _zcUserQueryNameSpace)\n  File \"\u003cstdin\u003e\", line 13, in \u003cmodule\u003e\nSystemExit\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1523494166350_1044724187",
      "id": "20180412-084926_221495279",
      "dateCreated": "Apr 12, 2018 8:49:26 AM",
      "dateStarted": "Apr 12, 2018 3:14:25 PM",
      "dateFinished": "Apr 12, 2018 3:14:25 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "admin",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1523494243074_1623325236",
      "id": "20180412-085043_1223766282",
      "dateCreated": "Apr 12, 2018 8:50:43 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "test2.py",
  "id": "2DDQXFBN5",
  "angularObjects": {
    "2D8R62MXM:shared_process": [],
    "2DBDFBQR3:shared_process": [],
    "2D9K5JWKP:shared_process": [],
    "2DBEP7TK7:shared_process": [],
    "2DA6FRUJW:shared_process": [],
    "2D8UJGRNN:shared_process": [],
    "2D9DHSEWB:shared_process": [],
    "2DC1M613G:shared_process": [],
    "2DAZFRFV1:shared_process": [],
    "2DAAWAT3T:shared_process": [],
    "2DAHNNSZ1:shared_process": [],
    "2D8CDK7XJ:shared_process": [],
    "2DAPY4T2F:shared_process": [],
    "2D8YM4U3E:shared_process": [],
    "2D84MWKNV:shared_process": [],
    "2DBD7SVQN:shared_process": [],
    "2DC281SJE:shared_process": [],
    "2DBERZSZG:shared_process": [],
    "2D9JU8ETA:shared_process": []
  },
  "config": {
    "personalizedMode": "false",
    "looknfeel": "default"
  },
  "info": {}
}